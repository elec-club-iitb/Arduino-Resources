/*

    LM35_temperature_Sensor_Averaged_LCD_serial
    
  This program  is an improvement over similar program which reads just one value and uses it.
  This program takes a number of samples N, set by the user and averages it.
  The delay between two samples is so adjusted that one average is calculated using N samples in 1000 ms or 1 second.
  
  
  The program will read from one ADC channel an analog value or voltage generated by LM35 temperature sensor.
  The sensor output is 10 millivolts per deg C of room temperature.At 30 Deg C, the sensor voltage is 10mV x 30 = 300 mV
  The Analog to digital converter section converts 0 to 5V or 5000 mV (Aref) into digital numbers 0 to 1023. hence at 30 deg when input voltage is 300 mV, 
  the ADC will read a number or count of (300 mV /5000mV) * 1024 = 61.44. Since the number returned is an integer, it could be 61 or 62.

  The program display ADC count and absolute value of voltage and temperature thereof on LCD and Serial Port both.
  A delay of about 1 second is given between two readings so that data can be viewed easily on Serial.



 The circuit:
 * LCD RS pin to digital pin 13
 * LCD Enable pin to digital pin 12
 * LCD D4 pin to digital pin 5
 * LCD D5 pin to digital pin 4
 * LCD D6 pin to digital pin 3
 * LCD D7 pin to digital pin 2
 * Connect Arduino +5V and Ground pins to General Purpose Input / Output Board +5V and GND pins. Use red wire for +5v and black or green wire for GND.
 * Connect LM35 pin to analog input 0. Do not connect it to digital pin 0. 
 
 Suggested improvement:
   1. Instead of reading one value every 1 second and using it, it may be better to read 10 values spread evenly over 0.1 seconds and taking an average 
   of it and using the average. What do we gain from it. 
   2. Can we extend the number of samples from 10 to 100 in a second?
 
 
   created by P. W Dandekar on 24th May 2010.
   modified on sept 28, 2015
 
 */

// include the library code:
#include <LiquidCrystal.h>

// initialize the library with the numbers of the interface pins
LiquidCrystal lcd(13, 12, 5, 4, 3, 2);

int n = 10; // initially take 10 samples in each second.
int i,sum;//define variables to read N samples and store their sum

float itemp; // define variables for ADC count, actual voltage measured in mV and actual temperature
float ftemp,fcelsius;
int temp_sensor_Pin = 0;

void setup() {
  // set up the LCD's number of rows and columns: 
  lcd.begin(16, 2);
  // Print a message to the LCD.
  lcd.print("TempSensor LM35");// message squeezed in 16 char
  // initialize the serial communications:
  Serial.begin(9600);
  Serial.println("Temperature Sensor LM35 values......");//
  delay(1000);// delay of 1 second just for fun.
  
 
}// end of setup.

void loop() {
  // collect n samples and sum them up in var sum.
  sum = 0;// initialize sum to 0.
  for (i=0;i<n;i++)
  {
    sum = sum + analogRead(temp_sensor_Pin);// note that the value read from sensor gets added straight to var sum
    delay(1000/n);// adjust delay that so that we take n samples in one second.
  }    
  // collection and summation of n samples in 1 second is completed. Note individual samples are not saved but their sum is.   
  
  itemp = (float) sum / n; // itemp now gets an average of n values and not a single value as in previous sketch.
  // Rest of the code is same.
 
  ftemp = 5000.0 * itemp / 1024.0;// voltage in millivolts converted. Decimal point promotes or converts int into float.
  fcelsius = ftemp / 10.0  ;// convert voltage into temperature into degree Celcious.

  // we know that in present circumstances room temp will never exceed 50 deg C and ADC count will never be more than 3 digits 
  // so we will format LCD message appropriately  
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("ADC=");// 
  lcd.print(itemp);// show legend and value of ADC count read

  lcd.setCursor(8, 0);// position the cursor on column 8 in top row
  lcd.print("V=");// 
  lcd.print(ftemp);// show legend and value of voltage read from temperature sensor
  
 lcd.setCursor(0, 1);// position the cursor on column 0 in bottom row
 lcd.print("DegC=");// 
 lcd.print(fcelsius);// show legend and value of actual temperature as a float
  
  // similarly format a message to be shown on serial monitor in PC
  
  Serial.print("LM35 temp sensor ADC count = ");
  Serial.print(itemp);// send legend and value of ADC count read

  Serial.print("  Voltage read in mV =  ");
  Serial.print(ftemp);// send legend and value of voltage read from temperature sensor
 
  Serial.print("  Temp in Deg C =  ");
  Serial.println(fcelsius);// send legend and value of voltage read from temperature sensor. Note newline command here.
  Serial.print("sum = ");//
  Serial.println(sum);//
  
// All the tasks done. Now waste 1 second before taking next reading.

}

  

